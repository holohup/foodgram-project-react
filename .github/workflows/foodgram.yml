name: Foodgram CI/CD

on: [push]

env: 
  REPO_TAG: holohup/foodgram_backend:latest

jobs:
  code_tests:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13.0-alpine

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          PGUSER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
  
    steps:
      - uses: actions/checkout@v2

      - name: Python Setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          cache: "pip"
          cache-dependency-path: "**/*requirements*.txt"

      - name: Installing dependencies and testing scripts
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Flake8 tests
        run: python -m flake8

      - name: Unit tests
        run: cd backend && python manage.py test

  build_image_and_push_to_docker_hub:
    name: Build and Push Docker image to Docker Hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: code_tests
    steps:
      - uses: actions/checkout@v2
      - name: log in, build an image and push
        run: |
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build backend --tag $REPO_TAG
          docker push $REPO_TAG


  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: build_image_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            docker-compose --project-directory foodgram stop web
            docker pull $REPO_TAG
            echo '${{ secrets.DB_CREDENTIALS }}' > foodgram/.env
            docker-compose --project-directory foodgram up -d

  smoke_tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' 
    needs: deploy
    steps:
      - name: check statuscodes
        run: |
          EXPECTED_401=$(curl --write-out '%{http_code}' -L --silent --output /dev/null http://${{ secrets.HOST }}/api/)
          EXPECTED_200=$(curl --write-out '%{http_code}' -L --silent --output /dev/null http://${{ secrets.HOST }}/admin/)
          if [[ $EXPECTED_401 != "401" || $EXPECTED_200 != "200" ]]; then
            echo 'Something is not working'
            exit 1
          else
            echo 'URLs return expected status codes'
          fi

  send_message:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: smoke_tests
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
